Lesson 2 Reflections

Step 5 Reflect: Initializing a respository
What happens when you initialize a repository?
Why do you need to do it?

When you initialize a repository a .git directory is created. This is a hidden directory
that contains the control information necesary for managing the repository. It is also
used to contain the index (staging area) and all of the commits. The commits are
snapshots taken of your project and can be used to back out from bugs and to try
safely develop and try out new features.


Step 8 Reflect: Staging area
How is the staging area different from the working directory and the repository?
What value do you think it offers?

The repository keeps all of the project commits which are snapshots of the project taken
at specific logical moments during development. The working directory holds the project
files that correspond to a specific commit and any changes made since that commit was
created. The staging area is used to hold a copy of any changes to the working directory
that you want to include in the next commit.

With a staging area I can select logically related changes for a commit even if I have
made other unrelated changes in the working directory.


Step 13 Reflect: Commit size
How can you use the staging area to make sure you have one commit per logical change?

Only add the changes that are logically conected to the staging area before creating a
commmit. Say you solved a couple of problems while working hot and heavy on the project.
Add the changes for problem1 then commit and then add the changes for problem2 and commit.


Step 16 Reflect: When to use branches
What are some situations when branches would be helpful in keeping your history organized? How would branches help?

When multiple developers are working on different parts of the same project. When you want
to try out some changes without impacting the current stable and tested version. When you
want multiple releases that each have unique features. Branches can keep untested code off
of the main branch until they are tested and approved and then they can be merged back into
the main branch.