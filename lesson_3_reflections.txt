Step 7 Reflect: When to Use a Remote Repository
When would you want to use a remote repository rather than keeping all your work
local?

If I was collaborating with other developers on a project I would want us to all
share our work on a remote repository. I also like the idea that by pushing my
work remotely I create a backup with copies local and remote. Another benefit is
to the github community which can see my project, borrow anything usefull, and 
contribute if they so desire.


Step 10 Reflect: Manual vs. automatic pull
Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

I wouldn't want the branch I'm working on to change automatically without my
knowledge. It would be like developing in quicksand without any kind of sure footing.


Step 14 Reflect: Forks, Clones, and Branches
Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

Use fork on github to copy a github repository from another user into your github
directory. That way you can make changes without affecting the original repository.

Use clone to copy a github repository to your local computer. This allows you to make
changes that only you can see until you're ready to share the changes by pushing them
out to github

A branch is a labeled sequence of commits within a repository. They are used to keep
track of changes you make to your repository. Changes on a branch can be pushed to
a github repository for sharing. Any changes to a branch on the github repository that
collaborators have shared can be pulled to your local repository.


Step 22 Reflect: Local copies of remote branches
What is the benefit of having a copy of the last known state of the remote
stored locally?

The benefit is that by comparing the remote tracking branch with the local branch
you can see if changes on the remote repository and changes on the local branch have
been synchronized so that the local and remote branches have the same sequence of commits.

The git-status command will let you know if the local branch is ahead, behind, up to date,
or out of synch. 

If ahead then you will need to push to get the remote branch up to date.

If the remote branch is out of synch then the push will fail and you will have to
fetch or pull and merge. Then you will still be ahead of the remote and you
should push.

If behind, you can do a fetch/merge or pull to get your local branch up to date.


Step 25 Reflect: Collaboration using Git and GitHub
How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

If we tried a manual process without the benefit of a VCS then it would be a mess. We
would need to manually version files by adding a timestamp and the programmers initials
to the file name. We would have to designate someone to manage the "golden" project source
code. That person would be responsible for merging in all changes.
